This txt file will try to explain how to push our codebase to the internet and make it accessible from other apis and users. 
NOTE: We are not gonna to use cloud services like heroku or netlify, which are very great by the way, but for learning they kind of suck since they are hiding from you a lot of details and that will make you feel that at the end of the day you are deploying apps but still don't understand what is going on under the hood.


So this txt file, will tackle the deployement process of a web app into a web hosting registrar and using the cPannel tool for managining our application setup on the server behalf.

So for hosting, you will be provided with defrent choises, you can use shared hosting, vps hosting, dedecated servers, or some wordpress | prestashop | joumela shared hosting.

The most used one are shared hosting or vps hosting, the first one consist on getting signed up for an account which maps into a user route in the server file system and ressources, so as you push you code to it via ftp or ssh.

Then, we have the vps hosting which is more capable then shared hosting, and this basicly gives you a full control for a VM which is a vertual machine that acts as a physical one.


Then a dedicated server, is as it sounds, you buy a server with the data server required for it functionnality, this is super capable but very expensive.


So we will go deeper in the shared hosting part, since it the cheapest, so the ideal for side project. cPannel will be our control tool. 


Usually when you login to your cPannel session, in the right side you will see all the information about the server. And then in the main view, you will have all the plugins and the tools provided with cPannel, here you can find the file system, ssh setup, ressources monitors, some of popular content managment systems (prestashop, wordpress..), subdomains tools, and sometimes (in some cPannel themes) the terminal.


Our buildpack is based on Node.js/Express.js, so we need to deploy in such a way that the production env will suites our builpack needs.

So if you are using cPannel, 

For pushing up your code, you can use ftp/ssh&git/filesystem builtin.


Via the filesystem: 
	this is the most straight forward manner of doing things, since you only need to create a folder in the home directory that the shared hosting provided you with, and then upload your local codebase into it, and run it from there (via the cPannel terminal).


Via the ftp
	for this way, you will need for a third party software, like filezilla with will connect to the shared hosting that you own by its ip address and the default username, and then you can send any file you want to it.

Via ssh/git 
	this is the most commun way, since it is the most secure, and this will be done by first, connecting your git setup via ssh to your shared hosting account and then push the codebase into it.



Now that you codebase it on the production envirenment, you will need to launch it, and for that you can just run the npm start script. So, now your application is deployed, but you can only visit it via its ip address and also you have to specefy the port, which kind of sucks.

So for the port thing, we will need to install a library called libcap2-bin which will help us run our application in the 80 (http) port and that with out having to write it the url bar.


Now for the ip address, we need to setup the dns server, so what you need is to go to your domain name registrar, and add the dns servers of your shared hosting service provider to deal with your domain name.

The idea here is that, the domain name is user friendly but it is not for the internet, so to get both of the two worlds, what we do is that, we say "hey internet use my shared hosting dns servers to translate my domain name to finnaly access my web app ressources".










